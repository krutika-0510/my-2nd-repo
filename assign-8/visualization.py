# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RKWiXmyoqg0p7EqC-DWUDWxqKJSFuV2k
"""

import pandas as pd
import matplotlib.pyplot as plt

def load_data(filename):
    return pd.read_csv(filename)

def plot_total_cases(df):
    df_country = df.groupby('Country/Region').sum()
    countries = df_country.index.tolist()

    i = 0
    while i < len(countries):
        country = countries[i]
        df_total = df_country.loc[country, ['Confirmed', 'Deaths', 'Recovered']].to_frame().reset_index()
        df_total.columns = ['CaseType', 'Count']

        colors = {'Confirmed': 'green', 'Deaths': 'red', 'Recovered': 'blue'}

        ax = df_total.plot(kind='bar', x='CaseType', y='Count', legend=False, color=[colors[case] for case in df_total['CaseType']], figsize=(5, 5))

        plt.xlabel('Case Type')
        plt.ylabel('Count')
        plt.title(f'Total Confirmed, Deaths, and Recovered Cases in {country}')

        # Adding data labels
        for idx, row in df_total.iterrows():
            plt.text(idx, row['Count'], str(row['Count']), ha='center', va='bottom', color=colors[row['CaseType']])

        plt.tight_layout()
        plt.show()

        # input(f'Press Enter to continue to the next country...')
        plt.close()

        i += 1

def plot_top_countries(df):
    df_country = df.groupby('Country/Region').sum()
    df_top_countries = df_country.nlargest(10, 'Confirmed')[['Confirmed', 'Deaths', 'Recovered']]

    colors = ['blue', 'red', 'green']

    ax = df_top_countries.plot(kind='bar', stacked=True, figsize=(12, 8), color=colors)

    plt.xlabel('Country/Region')
    plt.ylabel('Count')
    plt.title('Top 10 Countries with Highest Number of Cases')
    plt.legend(['Confirmed', 'Deaths', 'Recovered'])

    # Adding data labels
    for bar in ax.patches:
        if bar.get_height() > 0:  # To avoid placing text on bars with height 0
            plt.text(bar.get_x() + bar.get_width() / 2,
                     bar.get_y() + bar.get_height() / 2,
                     f'{int(bar.get_height())}',
                     ha='center',
                     va='center',
                     color='white' if bar.get_height() > 20000 else 'black')  # White text for better contrast on large bars

    plt.tight_layout()
    plt.show()
    plt.close()

if __name__ == "__main__":
    filename = '/content/drive/MyDrive/clean_covid_data (1).csv'
    df = load_data(filename)

    print("Displaying individual country charts:")
    plot_total_cases(df)

    print("Displaying top 10 countries with highest number of cases:")
    plot_top_countries(df)

